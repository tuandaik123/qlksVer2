#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QLKS.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="db_HotelManagement")]
	public partial class DataQLKSDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBookingsOnline(BookingsOnline instance);
    partial void UpdateBookingsOnline(BookingsOnline instance);
    partial void DeleteBookingsOnline(BookingsOnline instance);
    partial void InsertCustommer(Custommer instance);
    partial void UpdateCustommer(Custommer instance);
    partial void DeleteCustommer(Custommer instance);
    partial void Insertdb_Booking(db_Booking instance);
    partial void Updatedb_Booking(db_Booking instance);
    partial void Deletedb_Booking(db_Booking instance);
    partial void Insertdb_Event(db_Event instance);
    partial void Updatedb_Event(db_Event instance);
    partial void Deletedb_Event(db_Event instance);
    partial void Insertdb_Feedback(db_Feedback instance);
    partial void Updatedb_Feedback(db_Feedback instance);
    partial void Deletedb_Feedback(db_Feedback instance);
    partial void Insertdb_Facility(db_Facility instance);
    partial void Updatedb_Facility(db_Facility instance);
    partial void Deletedb_Facility(db_Facility instance);
    partial void Insertdb_Floor(db_Floor instance);
    partial void Updatedb_Floor(db_Floor instance);
    partial void Deletedb_Floor(db_Floor instance);
    partial void Insertdb_Payment(db_Payment instance);
    partial void Updatedb_Payment(db_Payment instance);
    partial void Deletedb_Payment(db_Payment instance);
    partial void Insertdb_RoomService(db_RoomService instance);
    partial void Updatedb_RoomService(db_RoomService instance);
    partial void Deletedb_RoomService(db_RoomService instance);
    partial void Insertdb_RoomType(db_RoomType instance);
    partial void Updatedb_RoomType(db_RoomType instance);
    partial void Deletedb_RoomType(db_RoomType instance);
    partial void Insertdb_Service(db_Service instance);
    partial void Updatedb_Service(db_Service instance);
    partial void Deletedb_Service(db_Service instance);
    partial void Insertdb_Staff(db_Staff instance);
    partial void Updatedb_Staff(db_Staff instance);
    partial void Deletedb_Staff(db_Staff instance);
    partial void Insertdb_Tax(db_Tax instance);
    partial void Updatedb_Tax(db_Tax instance);
    partial void Deletedb_Tax(db_Tax instance);
    partial void InsertDiscount(Discount instance);
    partial void UpdateDiscount(Discount instance);
    partial void DeleteDiscount(Discount instance);
    partial void InsertImageTypeRoom(ImageTypeRoom instance);
    partial void UpdateImageTypeRoom(ImageTypeRoom instance);
    partial void DeleteImageTypeRoom(ImageTypeRoom instance);
    partial void Insertdb_Room(db_Room instance);
    partial void Updatedb_Room(db_Room instance);
    partial void Deletedb_Room(db_Room instance);
    partial void Insertdb_User(db_User instance);
    partial void Updatedb_User(db_User instance);
    partial void Deletedb_User(db_User instance);
    #endregion
		
		public DataQLKSDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataQLKSDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataQLKSDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataQLKSDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BookingsOnline> BookingsOnlines
		{
			get
			{
				return this.GetTable<BookingsOnline>();
			}
		}
		
		public System.Data.Linq.Table<Custommer> Custommers
		{
			get
			{
				return this.GetTable<Custommer>();
			}
		}
		
		public System.Data.Linq.Table<db_Booking> db_Bookings
		{
			get
			{
				return this.GetTable<db_Booking>();
			}
		}
		
		public System.Data.Linq.Table<db_Event> db_Events
		{
			get
			{
				return this.GetTable<db_Event>();
			}
		}
		
		public System.Data.Linq.Table<db_Feedback> db_Feedbacks
		{
			get
			{
				return this.GetTable<db_Feedback>();
			}
		}
		
		public System.Data.Linq.Table<db_Facility> db_Facilities
		{
			get
			{
				return this.GetTable<db_Facility>();
			}
		}
		
		public System.Data.Linq.Table<db_Floor> db_Floors
		{
			get
			{
				return this.GetTable<db_Floor>();
			}
		}
		
		public System.Data.Linq.Table<db_Payment> db_Payments
		{
			get
			{
				return this.GetTable<db_Payment>();
			}
		}
		
		public System.Data.Linq.Table<db_RoomService> db_RoomServices
		{
			get
			{
				return this.GetTable<db_RoomService>();
			}
		}
		
		public System.Data.Linq.Table<db_RoomType> db_RoomTypes
		{
			get
			{
				return this.GetTable<db_RoomType>();
			}
		}
		
		public System.Data.Linq.Table<db_Service> db_Services
		{
			get
			{
				return this.GetTable<db_Service>();
			}
		}
		
		public System.Data.Linq.Table<db_Staff> db_Staffs
		{
			get
			{
				return this.GetTable<db_Staff>();
			}
		}
		
		public System.Data.Linq.Table<db_Tax> db_Taxes
		{
			get
			{
				return this.GetTable<db_Tax>();
			}
		}
		
		public System.Data.Linq.Table<Discount> Discounts
		{
			get
			{
				return this.GetTable<Discount>();
			}
		}
		
		public System.Data.Linq.Table<ImageTypeRoom> ImageTypeRooms
		{
			get
			{
				return this.GetTable<ImageTypeRoom>();
			}
		}
		
		public System.Data.Linq.Table<Slider> Sliders
		{
			get
			{
				return this.GetTable<Slider>();
			}
		}
		
		public System.Data.Linq.Table<db_Room> db_Rooms
		{
			get
			{
				return this.GetTable<db_Room>();
			}
		}
		
		public System.Data.Linq.Table<db_User> db_Users
		{
			get
			{
				return this.GetTable<db_User>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookingsOnline")]
	public partial class BookingsOnline : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _custommerID;
		
		private System.Nullable<int> _RoomID;
		
		private System.Nullable<System.DateTime> _CheckInDate;
		
		private System.Nullable<System.DateTime> _CheckOutDate;
		
		private System.Nullable<byte> _Verification;
		
		private System.Nullable<int> _status;
		
		private EntityRef<Custommer> _Custommer;
		
		private EntityRef<db_Room> _db_Room;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncustommerIDChanging(System.Nullable<int> value);
    partial void OncustommerIDChanged();
    partial void OnRoomIDChanging(System.Nullable<int> value);
    partial void OnRoomIDChanged();
    partial void OnCheckInDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCheckInDateChanged();
    partial void OnCheckOutDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCheckOutDateChanged();
    partial void OnVerificationChanging(System.Nullable<byte> value);
    partial void OnVerificationChanged();
    partial void OnstatusChanging(System.Nullable<int> value);
    partial void OnstatusChanged();
    #endregion
		
		public BookingsOnline()
		{
			this._Custommer = default(EntityRef<Custommer>);
			this._db_Room = default(EntityRef<db_Room>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_custommerID", DbType="Int")]
		public System.Nullable<int> custommerID
		{
			get
			{
				return this._custommerID;
			}
			set
			{
				if ((this._custommerID != value))
				{
					if (this._Custommer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncustommerIDChanging(value);
					this.SendPropertyChanging();
					this._custommerID = value;
					this.SendPropertyChanged("custommerID");
					this.OncustommerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomID", DbType="Int")]
		public System.Nullable<int> RoomID
		{
			get
			{
				return this._RoomID;
			}
			set
			{
				if ((this._RoomID != value))
				{
					if (this._db_Room.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoomIDChanging(value);
					this.SendPropertyChanging();
					this._RoomID = value;
					this.SendPropertyChanged("RoomID");
					this.OnRoomIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckInDate", DbType="Date")]
		public System.Nullable<System.DateTime> CheckInDate
		{
			get
			{
				return this._CheckInDate;
			}
			set
			{
				if ((this._CheckInDate != value))
				{
					this.OnCheckInDateChanging(value);
					this.SendPropertyChanging();
					this._CheckInDate = value;
					this.SendPropertyChanged("CheckInDate");
					this.OnCheckInDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckOutDate", DbType="Date")]
		public System.Nullable<System.DateTime> CheckOutDate
		{
			get
			{
				return this._CheckOutDate;
			}
			set
			{
				if ((this._CheckOutDate != value))
				{
					this.OnCheckOutDateChanging(value);
					this.SendPropertyChanging();
					this._CheckOutDate = value;
					this.SendPropertyChanged("CheckOutDate");
					this.OnCheckOutDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Verification", DbType="TinyInt")]
		public System.Nullable<byte> Verification
		{
			get
			{
				return this._Verification;
			}
			set
			{
				if ((this._Verification != value))
				{
					this.OnVerificationChanging(value);
					this.SendPropertyChanging();
					this._Verification = value;
					this.SendPropertyChanged("Verification");
					this.OnVerificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Int")]
		public System.Nullable<int> status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Custommer_BookingsOnline", Storage="_Custommer", ThisKey="custommerID", OtherKey="CustomerID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Custommer Custommer
		{
			get
			{
				return this._Custommer.Entity;
			}
			set
			{
				Custommer previousValue = this._Custommer.Entity;
				if (((previousValue != value) 
							|| (this._Custommer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Custommer.Entity = null;
						previousValue.BookingsOnlines.Remove(this);
					}
					this._Custommer.Entity = value;
					if ((value != null))
					{
						value.BookingsOnlines.Add(this);
						this._custommerID = value.CustomerID;
					}
					else
					{
						this._custommerID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Custommer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="db_Room_BookingsOnline", Storage="_db_Room", ThisKey="RoomID", OtherKey="RoomID", IsForeignKey=true, DeleteRule="CASCADE")]
		public db_Room db_Room
		{
			get
			{
				return this._db_Room.Entity;
			}
			set
			{
				db_Room previousValue = this._db_Room.Entity;
				if (((previousValue != value) 
							|| (this._db_Room.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._db_Room.Entity = null;
						previousValue.BookingsOnlines.Remove(this);
					}
					this._db_Room.Entity = value;
					if ((value != null))
					{
						value.BookingsOnlines.Add(this);
						this._RoomID = value.RoomID;
					}
					else
					{
						this._RoomID = default(Nullable<int>);
					}
					this.SendPropertyChanged("db_Room");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Custommer")]
	public partial class Custommer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CustomerID;
		
		private string _UserID;
		
		private string _FullName;
		
		private string _Email;
		
		private string _Phone;
		
		private EntitySet<BookingsOnline> _BookingsOnlines;
		
		private EntitySet<db_Booking> _db_Bookings;
		
		private EntitySet<db_Feedback> _db_Feedbacks;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerIDChanging(int value);
    partial void OnCustomerIDChanged();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    #endregion
		
		public Custommer()
		{
			this._BookingsOnlines = new EntitySet<BookingsOnline>(new Action<BookingsOnline>(this.attach_BookingsOnlines), new Action<BookingsOnline>(this.detach_BookingsOnlines));
			this._db_Bookings = new EntitySet<db_Booking>(new Action<db_Booking>(this.attach_db_Bookings), new Action<db_Booking>(this.detach_db_Bookings));
			this._db_Feedbacks = new EntitySet<db_Feedback>(new Action<db_Feedback>(this.attach_db_Feedbacks), new Action<db_Feedback>(this.detach_db_Feedbacks));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="NVarChar(100)")]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(100)")]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(100)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Custommer_BookingsOnline", Storage="_BookingsOnlines", ThisKey="CustomerID", OtherKey="custommerID")]
		public EntitySet<BookingsOnline> BookingsOnlines
		{
			get
			{
				return this._BookingsOnlines;
			}
			set
			{
				this._BookingsOnlines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Custommer_db_Booking", Storage="_db_Bookings", ThisKey="CustomerID", OtherKey="CustomerID")]
		public EntitySet<db_Booking> db_Bookings
		{
			get
			{
				return this._db_Bookings;
			}
			set
			{
				this._db_Bookings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Custommer_db_Feedback", Storage="_db_Feedbacks", ThisKey="CustomerID", OtherKey="CustomerID")]
		public EntitySet<db_Feedback> db_Feedbacks
		{
			get
			{
				return this._db_Feedbacks;
			}
			set
			{
				this._db_Feedbacks.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BookingsOnlines(BookingsOnline entity)
		{
			this.SendPropertyChanging();
			entity.Custommer = this;
		}
		
		private void detach_BookingsOnlines(BookingsOnline entity)
		{
			this.SendPropertyChanging();
			entity.Custommer = null;
		}
		
		private void attach_db_Bookings(db_Booking entity)
		{
			this.SendPropertyChanging();
			entity.Custommer = this;
		}
		
		private void detach_db_Bookings(db_Booking entity)
		{
			this.SendPropertyChanging();
			entity.Custommer = null;
		}
		
		private void attach_db_Feedbacks(db_Feedback entity)
		{
			this.SendPropertyChanging();
			entity.Custommer = this;
		}
		
		private void detach_db_Feedbacks(db_Feedback entity)
		{
			this.SendPropertyChanging();
			entity.Custommer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.db_Bookings")]
	public partial class db_Booking : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BookingID;
		
		private System.Nullable<int> _CustomerID;
		
		private System.Nullable<int> _RoomID;
		
		private System.Nullable<System.DateTime> _CheckInDate;
		
		private System.Nullable<System.DateTime> _CheckOutDate;
		
		private System.Nullable<int> _status;
		
		private EntitySet<db_Feedback> _db_Feedbacks;
		
		private EntitySet<db_Payment> _db_Payments;
		
		private EntitySet<db_RoomService> _db_RoomServices;
		
		private EntityRef<Custommer> _Custommer;
		
		private EntityRef<db_Room> _db_Room;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBookingIDChanging(int value);
    partial void OnBookingIDChanged();
    partial void OnCustomerIDChanging(System.Nullable<int> value);
    partial void OnCustomerIDChanged();
    partial void OnRoomIDChanging(System.Nullable<int> value);
    partial void OnRoomIDChanged();
    partial void OnCheckInDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCheckInDateChanged();
    partial void OnCheckOutDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCheckOutDateChanged();
    partial void OnstatusChanging(System.Nullable<int> value);
    partial void OnstatusChanged();
    #endregion
		
		public db_Booking()
		{
			this._db_Feedbacks = new EntitySet<db_Feedback>(new Action<db_Feedback>(this.attach_db_Feedbacks), new Action<db_Feedback>(this.detach_db_Feedbacks));
			this._db_Payments = new EntitySet<db_Payment>(new Action<db_Payment>(this.attach_db_Payments), new Action<db_Payment>(this.detach_db_Payments));
			this._db_RoomServices = new EntitySet<db_RoomService>(new Action<db_RoomService>(this.attach_db_RoomServices), new Action<db_RoomService>(this.detach_db_RoomServices));
			this._Custommer = default(EntityRef<Custommer>);
			this._db_Room = default(EntityRef<db_Room>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookingID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BookingID
		{
			get
			{
				return this._BookingID;
			}
			set
			{
				if ((this._BookingID != value))
				{
					this.OnBookingIDChanging(value);
					this.SendPropertyChanging();
					this._BookingID = value;
					this.SendPropertyChanged("BookingID");
					this.OnBookingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int")]
		public System.Nullable<int> CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					if (this._Custommer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomID", DbType="Int")]
		public System.Nullable<int> RoomID
		{
			get
			{
				return this._RoomID;
			}
			set
			{
				if ((this._RoomID != value))
				{
					if (this._db_Room.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoomIDChanging(value);
					this.SendPropertyChanging();
					this._RoomID = value;
					this.SendPropertyChanged("RoomID");
					this.OnRoomIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckInDate", DbType="Date")]
		public System.Nullable<System.DateTime> CheckInDate
		{
			get
			{
				return this._CheckInDate;
			}
			set
			{
				if ((this._CheckInDate != value))
				{
					this.OnCheckInDateChanging(value);
					this.SendPropertyChanging();
					this._CheckInDate = value;
					this.SendPropertyChanged("CheckInDate");
					this.OnCheckInDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckOutDate", DbType="Date")]
		public System.Nullable<System.DateTime> CheckOutDate
		{
			get
			{
				return this._CheckOutDate;
			}
			set
			{
				if ((this._CheckOutDate != value))
				{
					this.OnCheckOutDateChanging(value);
					this.SendPropertyChanging();
					this._CheckOutDate = value;
					this.SendPropertyChanged("CheckOutDate");
					this.OnCheckOutDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Int")]
		public System.Nullable<int> status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="db_Booking_db_Feedback", Storage="_db_Feedbacks", ThisKey="BookingID", OtherKey="BookingID")]
		public EntitySet<db_Feedback> db_Feedbacks
		{
			get
			{
				return this._db_Feedbacks;
			}
			set
			{
				this._db_Feedbacks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="db_Booking_db_Payment", Storage="_db_Payments", ThisKey="BookingID", OtherKey="BookingID")]
		public EntitySet<db_Payment> db_Payments
		{
			get
			{
				return this._db_Payments;
			}
			set
			{
				this._db_Payments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="db_Booking_db_RoomService", Storage="_db_RoomServices", ThisKey="BookingID", OtherKey="BookingID")]
		public EntitySet<db_RoomService> db_RoomServices
		{
			get
			{
				return this._db_RoomServices;
			}
			set
			{
				this._db_RoomServices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Custommer_db_Booking", Storage="_Custommer", ThisKey="CustomerID", OtherKey="CustomerID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Custommer Custommer
		{
			get
			{
				return this._Custommer.Entity;
			}
			set
			{
				Custommer previousValue = this._Custommer.Entity;
				if (((previousValue != value) 
							|| (this._Custommer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Custommer.Entity = null;
						previousValue.db_Bookings.Remove(this);
					}
					this._Custommer.Entity = value;
					if ((value != null))
					{
						value.db_Bookings.Add(this);
						this._CustomerID = value.CustomerID;
					}
					else
					{
						this._CustomerID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Custommer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="db_Room_db_Booking", Storage="_db_Room", ThisKey="RoomID", OtherKey="RoomID", IsForeignKey=true, DeleteRule="CASCADE")]
		public db_Room db_Room
		{
			get
			{
				return this._db_Room.Entity;
			}
			set
			{
				db_Room previousValue = this._db_Room.Entity;
				if (((previousValue != value) 
							|| (this._db_Room.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._db_Room.Entity = null;
						previousValue.db_Bookings.Remove(this);
					}
					this._db_Room.Entity = value;
					if ((value != null))
					{
						value.db_Bookings.Add(this);
						this._RoomID = value.RoomID;
					}
					else
					{
						this._RoomID = default(Nullable<int>);
					}
					this.SendPropertyChanged("db_Room");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_db_Feedbacks(db_Feedback entity)
		{
			this.SendPropertyChanging();
			entity.db_Booking = this;
		}
		
		private void detach_db_Feedbacks(db_Feedback entity)
		{
			this.SendPropertyChanging();
			entity.db_Booking = null;
		}
		
		private void attach_db_Payments(db_Payment entity)
		{
			this.SendPropertyChanging();
			entity.db_Booking = this;
		}
		
		private void detach_db_Payments(db_Payment entity)
		{
			this.SendPropertyChanging();
			entity.db_Booking = null;
		}
		
		private void attach_db_RoomServices(db_RoomService entity)
		{
			this.SendPropertyChanging();
			entity.db_Booking = this;
		}
		
		private void detach_db_RoomServices(db_RoomService entity)
		{
			this.SendPropertyChanging();
			entity.db_Booking = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.db_Events")]
	public partial class db_Event : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EventID;
		
		private string _EventName;
		
		private System.DateTime _Date;
		
		private string _Location;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEventIDChanging(int value);
    partial void OnEventIDChanged();
    partial void OnEventNameChanging(string value);
    partial void OnEventNameChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    #endregion
		
		public db_Event()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int EventID
		{
			get
			{
				return this._EventID;
			}
			set
			{
				if ((this._EventID != value))
				{
					this.OnEventIDChanging(value);
					this.SendPropertyChanging();
					this._EventID = value;
					this.SendPropertyChanged("EventID");
					this.OnEventIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string EventName
		{
			get
			{
				return this._EventName;
			}
			set
			{
				if ((this._EventName != value))
				{
					this.OnEventNameChanging(value);
					this.SendPropertyChanging();
					this._EventName = value;
					this.SendPropertyChanged("EventName");
					this.OnEventNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.db_Feedback")]
	public partial class db_Feedback : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FeedbackID;
		
		private System.Nullable<int> _CustomerID;
		
		private System.Nullable<int> _BookingID;
		
		private int _Rating;
		
		private string _Comments;
		
		private EntityRef<db_Booking> _db_Booking;
		
		private EntityRef<Custommer> _Custommer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFeedbackIDChanging(int value);
    partial void OnFeedbackIDChanged();
    partial void OnCustomerIDChanging(System.Nullable<int> value);
    partial void OnCustomerIDChanged();
    partial void OnBookingIDChanging(System.Nullable<int> value);
    partial void OnBookingIDChanged();
    partial void OnRatingChanging(int value);
    partial void OnRatingChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    #endregion
		
		public db_Feedback()
		{
			this._db_Booking = default(EntityRef<db_Booking>);
			this._Custommer = default(EntityRef<Custommer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeedbackID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int FeedbackID
		{
			get
			{
				return this._FeedbackID;
			}
			set
			{
				if ((this._FeedbackID != value))
				{
					this.OnFeedbackIDChanging(value);
					this.SendPropertyChanging();
					this._FeedbackID = value;
					this.SendPropertyChanged("FeedbackID");
					this.OnFeedbackIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int")]
		public System.Nullable<int> CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					if (this._Custommer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookingID", DbType="Int")]
		public System.Nullable<int> BookingID
		{
			get
			{
				return this._BookingID;
			}
			set
			{
				if ((this._BookingID != value))
				{
					if (this._db_Booking.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBookingIDChanging(value);
					this.SendPropertyChanging();
					this._BookingID = value;
					this.SendPropertyChanged("BookingID");
					this.OnBookingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rating", DbType="Int NOT NULL")]
		public int Rating
		{
			get
			{
				return this._Rating;
			}
			set
			{
				if ((this._Rating != value))
				{
					this.OnRatingChanging(value);
					this.SendPropertyChanging();
					this._Rating = value;
					this.SendPropertyChanged("Rating");
					this.OnRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this.OnCommentsChanging(value);
					this.SendPropertyChanging();
					this._Comments = value;
					this.SendPropertyChanged("Comments");
					this.OnCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="db_Booking_db_Feedback", Storage="_db_Booking", ThisKey="BookingID", OtherKey="BookingID", IsForeignKey=true)]
		public db_Booking db_Booking
		{
			get
			{
				return this._db_Booking.Entity;
			}
			set
			{
				db_Booking previousValue = this._db_Booking.Entity;
				if (((previousValue != value) 
							|| (this._db_Booking.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._db_Booking.Entity = null;
						previousValue.db_Feedbacks.Remove(this);
					}
					this._db_Booking.Entity = value;
					if ((value != null))
					{
						value.db_Feedbacks.Add(this);
						this._BookingID = value.BookingID;
					}
					else
					{
						this._BookingID = default(Nullable<int>);
					}
					this.SendPropertyChanged("db_Booking");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Custommer_db_Feedback", Storage="_Custommer", ThisKey="CustomerID", OtherKey="CustomerID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Custommer Custommer
		{
			get
			{
				return this._Custommer.Entity;
			}
			set
			{
				Custommer previousValue = this._Custommer.Entity;
				if (((previousValue != value) 
							|| (this._Custommer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Custommer.Entity = null;
						previousValue.db_Feedbacks.Remove(this);
					}
					this._Custommer.Entity = value;
					if ((value != null))
					{
						value.db_Feedbacks.Add(this);
						this._CustomerID = value.CustomerID;
					}
					else
					{
						this._CustomerID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Custommer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.db_Facilities")]
	public partial class db_Facility : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FacilityID;
		
		private string _FacilityName;
		
		private string _Description;
		
		private string _icon;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFacilityIDChanging(int value);
    partial void OnFacilityIDChanged();
    partial void OnFacilityNameChanging(string value);
    partial void OnFacilityNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OniconChanging(string value);
    partial void OniconChanged();
    #endregion
		
		public db_Facility()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FacilityID
		{
			get
			{
				return this._FacilityID;
			}
			set
			{
				if ((this._FacilityID != value))
				{
					this.OnFacilityIDChanging(value);
					this.SendPropertyChanging();
					this._FacilityID = value;
					this.SendPropertyChanged("FacilityID");
					this.OnFacilityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityName", DbType="NVarChar(100)")]
		public string FacilityName
		{
			get
			{
				return this._FacilityName;
			}
			set
			{
				if ((this._FacilityName != value))
				{
					this.OnFacilityNameChanging(value);
					this.SendPropertyChanging();
					this._FacilityName = value;
					this.SendPropertyChanged("FacilityName");
					this.OnFacilityNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_icon", DbType="NVarChar(100)")]
		public string icon
		{
			get
			{
				return this._icon;
			}
			set
			{
				if ((this._icon != value))
				{
					this.OniconChanging(value);
					this.SendPropertyChanging();
					this._icon = value;
					this.SendPropertyChanged("icon");
					this.OniconChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.db_Floor")]
	public partial class db_Floor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _Floor;
		
		private EntitySet<db_Room> _db_Rooms;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnFloorChanging(System.Nullable<int> value);
    partial void OnFloorChanged();
    #endregion
		
		public db_Floor()
		{
			this._db_Rooms = new EntitySet<db_Room>(new Action<db_Room>(this.attach_db_Rooms), new Action<db_Room>(this.detach_db_Rooms));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Floor", DbType="Int")]
		public System.Nullable<int> Floor
		{
			get
			{
				return this._Floor;
			}
			set
			{
				if ((this._Floor != value))
				{
					this.OnFloorChanging(value);
					this.SendPropertyChanging();
					this._Floor = value;
					this.SendPropertyChanged("Floor");
					this.OnFloorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="db_Floor_db_Room", Storage="_db_Rooms", ThisKey="id", OtherKey="floorID")]
		public EntitySet<db_Room> db_Rooms
		{
			get
			{
				return this._db_Rooms;
			}
			set
			{
				this._db_Rooms.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_db_Rooms(db_Room entity)
		{
			this.SendPropertyChanging();
			entity.db_Floor = this;
		}
		
		private void detach_db_Rooms(db_Room entity)
		{
			this.SendPropertyChanging();
			entity.db_Floor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.db_Payments")]
	public partial class db_Payment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PaymentID;
		
		private System.Nullable<int> _BookingID;
		
		private decimal _Amount;
		
		private System.DateTime _PaymentDate;
		
		private System.Nullable<byte> _method;
		
		private System.Nullable<int> _Tax;
		
		private System.Nullable<int> _Discount;
		
		private EntityRef<db_Booking> _db_Booking;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPaymentIDChanging(int value);
    partial void OnPaymentIDChanged();
    partial void OnBookingIDChanging(System.Nullable<int> value);
    partial void OnBookingIDChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnPaymentDateChanging(System.DateTime value);
    partial void OnPaymentDateChanged();
    partial void OnmethodChanging(System.Nullable<byte> value);
    partial void OnmethodChanged();
    partial void OnTaxChanging(System.Nullable<int> value);
    partial void OnTaxChanged();
    partial void OnDiscountChanging(System.Nullable<int> value);
    partial void OnDiscountChanged();
    #endregion
		
		public db_Payment()
		{
			this._db_Booking = default(EntityRef<db_Booking>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PaymentID
		{
			get
			{
				return this._PaymentID;
			}
			set
			{
				if ((this._PaymentID != value))
				{
					this.OnPaymentIDChanging(value);
					this.SendPropertyChanging();
					this._PaymentID = value;
					this.SendPropertyChanged("PaymentID");
					this.OnPaymentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookingID", DbType="Int")]
		public System.Nullable<int> BookingID
		{
			get
			{
				return this._BookingID;
			}
			set
			{
				if ((this._BookingID != value))
				{
					if (this._db_Booking.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBookingIDChanging(value);
					this.SendPropertyChanging();
					this._BookingID = value;
					this.SendPropertyChanged("BookingID");
					this.OnBookingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(10,0) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentDate", DbType="DateTime NOT NULL")]
		public System.DateTime PaymentDate
		{
			get
			{
				return this._PaymentDate;
			}
			set
			{
				if ((this._PaymentDate != value))
				{
					this.OnPaymentDateChanging(value);
					this.SendPropertyChanging();
					this._PaymentDate = value;
					this.SendPropertyChanged("PaymentDate");
					this.OnPaymentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_method", DbType="TinyInt")]
		public System.Nullable<byte> method
		{
			get
			{
				return this._method;
			}
			set
			{
				if ((this._method != value))
				{
					this.OnmethodChanging(value);
					this.SendPropertyChanging();
					this._method = value;
					this.SendPropertyChanged("method");
					this.OnmethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tax", DbType="Int")]
		public System.Nullable<int> Tax
		{
			get
			{
				return this._Tax;
			}
			set
			{
				if ((this._Tax != value))
				{
					this.OnTaxChanging(value);
					this.SendPropertyChanging();
					this._Tax = value;
					this.SendPropertyChanged("Tax");
					this.OnTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="Int")]
		public System.Nullable<int> Discount
		{
			get
			{
				return this._Discount;
			}
			set
			{
				if ((this._Discount != value))
				{
					this.OnDiscountChanging(value);
					this.SendPropertyChanging();
					this._Discount = value;
					this.SendPropertyChanged("Discount");
					this.OnDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="db_Booking_db_Payment", Storage="_db_Booking", ThisKey="BookingID", OtherKey="BookingID", IsForeignKey=true, DeleteRule="CASCADE")]
		public db_Booking db_Booking
		{
			get
			{
				return this._db_Booking.Entity;
			}
			set
			{
				db_Booking previousValue = this._db_Booking.Entity;
				if (((previousValue != value) 
							|| (this._db_Booking.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._db_Booking.Entity = null;
						previousValue.db_Payments.Remove(this);
					}
					this._db_Booking.Entity = value;
					if ((value != null))
					{
						value.db_Payments.Add(this);
						this._BookingID = value.BookingID;
					}
					else
					{
						this._BookingID = default(Nullable<int>);
					}
					this.SendPropertyChanged("db_Booking");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.db_RoomServices")]
	public partial class db_RoomService : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RoomServiceID;
		
		private System.Nullable<int> _BookingID;
		
		private System.Nullable<int> _ServiceID;
		
		private System.Nullable<int> _Quantity;
		
		private System.Nullable<decimal> _TotalPrice;
		
		private System.Nullable<byte> _status;
		
		private System.Nullable<System.DateTime> _datetime;
		
		private EntityRef<db_Booking> _db_Booking;
		
		private EntityRef<db_Service> _db_Service;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoomServiceIDChanging(int value);
    partial void OnRoomServiceIDChanged();
    partial void OnBookingIDChanging(System.Nullable<int> value);
    partial void OnBookingIDChanged();
    partial void OnServiceIDChanging(System.Nullable<int> value);
    partial void OnServiceIDChanged();
    partial void OnQuantityChanging(System.Nullable<int> value);
    partial void OnQuantityChanged();
    partial void OnTotalPriceChanging(System.Nullable<decimal> value);
    partial void OnTotalPriceChanged();
    partial void OnstatusChanging(System.Nullable<byte> value);
    partial void OnstatusChanged();
    partial void OndatetimeChanging(System.Nullable<System.DateTime> value);
    partial void OndatetimeChanged();
    #endregion
		
		public db_RoomService()
		{
			this._db_Booking = default(EntityRef<db_Booking>);
			this._db_Service = default(EntityRef<db_Service>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomServiceID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RoomServiceID
		{
			get
			{
				return this._RoomServiceID;
			}
			set
			{
				if ((this._RoomServiceID != value))
				{
					this.OnRoomServiceIDChanging(value);
					this.SendPropertyChanging();
					this._RoomServiceID = value;
					this.SendPropertyChanged("RoomServiceID");
					this.OnRoomServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookingID", DbType="Int")]
		public System.Nullable<int> BookingID
		{
			get
			{
				return this._BookingID;
			}
			set
			{
				if ((this._BookingID != value))
				{
					if (this._db_Booking.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBookingIDChanging(value);
					this.SendPropertyChanging();
					this._BookingID = value;
					this.SendPropertyChanged("BookingID");
					this.OnBookingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceID", DbType="Int")]
		public System.Nullable<int> ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					if (this._db_Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
		public System.Nullable<int> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPrice", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> TotalPrice
		{
			get
			{
				return this._TotalPrice;
			}
			set
			{
				if ((this._TotalPrice != value))
				{
					this.OnTotalPriceChanging(value);
					this.SendPropertyChanging();
					this._TotalPrice = value;
					this.SendPropertyChanged("TotalPrice");
					this.OnTotalPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="TinyInt")]
		public System.Nullable<byte> status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_datetime", DbType="DateTime")]
		public System.Nullable<System.DateTime> datetime
		{
			get
			{
				return this._datetime;
			}
			set
			{
				if ((this._datetime != value))
				{
					this.OndatetimeChanging(value);
					this.SendPropertyChanging();
					this._datetime = value;
					this.SendPropertyChanged("datetime");
					this.OndatetimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="db_Booking_db_RoomService", Storage="_db_Booking", ThisKey="BookingID", OtherKey="BookingID", IsForeignKey=true, DeleteRule="CASCADE")]
		public db_Booking db_Booking
		{
			get
			{
				return this._db_Booking.Entity;
			}
			set
			{
				db_Booking previousValue = this._db_Booking.Entity;
				if (((previousValue != value) 
							|| (this._db_Booking.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._db_Booking.Entity = null;
						previousValue.db_RoomServices.Remove(this);
					}
					this._db_Booking.Entity = value;
					if ((value != null))
					{
						value.db_RoomServices.Add(this);
						this._BookingID = value.BookingID;
					}
					else
					{
						this._BookingID = default(Nullable<int>);
					}
					this.SendPropertyChanged("db_Booking");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="db_Service_db_RoomService", Storage="_db_Service", ThisKey="ServiceID", OtherKey="ServiceID", IsForeignKey=true, DeleteRule="CASCADE")]
		public db_Service db_Service
		{
			get
			{
				return this._db_Service.Entity;
			}
			set
			{
				db_Service previousValue = this._db_Service.Entity;
				if (((previousValue != value) 
							|| (this._db_Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._db_Service.Entity = null;
						previousValue.db_RoomServices.Remove(this);
					}
					this._db_Service.Entity = value;
					if ((value != null))
					{
						value.db_RoomServices.Add(this);
						this._ServiceID = value.ServiceID;
					}
					else
					{
						this._ServiceID = default(Nullable<int>);
					}
					this.SendPropertyChanged("db_Service");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.db_RoomType")]
	public partial class db_RoomType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Type;
		
		private System.Nullable<decimal> _PricePerNight;
		
		private System.Nullable<int> _bed;
		
		private System.Nullable<int> _bath;
		
		private string _img;
		
		private string _Description;
		
		private EntitySet<ImageTypeRoom> _ImageTypeRooms;
		
		private EntitySet<db_Room> _db_Rooms;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnPricePerNightChanging(System.Nullable<decimal> value);
    partial void OnPricePerNightChanged();
    partial void OnbedChanging(System.Nullable<int> value);
    partial void OnbedChanged();
    partial void OnbathChanging(System.Nullable<int> value);
    partial void OnbathChanged();
    partial void OnimgChanging(string value);
    partial void OnimgChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public db_RoomType()
		{
			this._ImageTypeRooms = new EntitySet<ImageTypeRoom>(new Action<ImageTypeRoom>(this.attach_ImageTypeRooms), new Action<ImageTypeRoom>(this.detach_ImageTypeRooms));
			this._db_Rooms = new EntitySet<db_Room>(new Action<db_Room>(this.attach_db_Rooms), new Action<db_Room>(this.detach_db_Rooms));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(100)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PricePerNight", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> PricePerNight
		{
			get
			{
				return this._PricePerNight;
			}
			set
			{
				if ((this._PricePerNight != value))
				{
					this.OnPricePerNightChanging(value);
					this.SendPropertyChanging();
					this._PricePerNight = value;
					this.SendPropertyChanged("PricePerNight");
					this.OnPricePerNightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bed", DbType="Int")]
		public System.Nullable<int> bed
		{
			get
			{
				return this._bed;
			}
			set
			{
				if ((this._bed != value))
				{
					this.OnbedChanging(value);
					this.SendPropertyChanging();
					this._bed = value;
					this.SendPropertyChanged("bed");
					this.OnbedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bath", DbType="Int")]
		public System.Nullable<int> bath
		{
			get
			{
				return this._bath;
			}
			set
			{
				if ((this._bath != value))
				{
					this.OnbathChanging(value);
					this.SendPropertyChanging();
					this._bath = value;
					this.SendPropertyChanged("bath");
					this.OnbathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_img", DbType="NVarChar(100)")]
		public string img
		{
			get
			{
				return this._img;
			}
			set
			{
				if ((this._img != value))
				{
					this.OnimgChanging(value);
					this.SendPropertyChanging();
					this._img = value;
					this.SendPropertyChanged("img");
					this.OnimgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="db_RoomType_ImageTypeRoom", Storage="_ImageTypeRooms", ThisKey="id", OtherKey="idType")]
		public EntitySet<ImageTypeRoom> ImageTypeRooms
		{
			get
			{
				return this._ImageTypeRooms;
			}
			set
			{
				this._ImageTypeRooms.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="db_RoomType_db_Room", Storage="_db_Rooms", ThisKey="id", OtherKey="idroomtype")]
		public EntitySet<db_Room> db_Rooms
		{
			get
			{
				return this._db_Rooms;
			}
			set
			{
				this._db_Rooms.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ImageTypeRooms(ImageTypeRoom entity)
		{
			this.SendPropertyChanging();
			entity.db_RoomType = this;
		}
		
		private void detach_ImageTypeRooms(ImageTypeRoom entity)
		{
			this.SendPropertyChanging();
			entity.db_RoomType = null;
		}
		
		private void attach_db_Rooms(db_Room entity)
		{
			this.SendPropertyChanging();
			entity.db_RoomType = this;
		}
		
		private void detach_db_Rooms(db_Room entity)
		{
			this.SendPropertyChanging();
			entity.db_RoomType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.db_Services")]
	public partial class db_Service : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ServiceID;
		
		private string _ServiceName;
		
		private string _Description;
		
		private System.Nullable<decimal> _Price;
		
		private string _image;
		
		private EntitySet<db_RoomService> _db_RoomServices;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnServiceIDChanging(int value);
    partial void OnServiceIDChanged();
    partial void OnServiceNameChanging(string value);
    partial void OnServiceNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnimageChanging(string value);
    partial void OnimageChanged();
    #endregion
		
		public db_Service()
		{
			this._db_RoomServices = new EntitySet<db_RoomService>(new Action<db_RoomService>(this.attach_db_RoomServices), new Action<db_RoomService>(this.detach_db_RoomServices));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string ServiceName
		{
			get
			{
				return this._ServiceName;
			}
			set
			{
				if ((this._ServiceName != value))
				{
					this.OnServiceNameChanging(value);
					this.SendPropertyChanging();
					this._ServiceName = value;
					this.SendPropertyChanged("ServiceName");
					this.OnServiceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image", DbType="VarChar(100)")]
		public string image
		{
			get
			{
				return this._image;
			}
			set
			{
				if ((this._image != value))
				{
					this.OnimageChanging(value);
					this.SendPropertyChanging();
					this._image = value;
					this.SendPropertyChanged("image");
					this.OnimageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="db_Service_db_RoomService", Storage="_db_RoomServices", ThisKey="ServiceID", OtherKey="ServiceID")]
		public EntitySet<db_RoomService> db_RoomServices
		{
			get
			{
				return this._db_RoomServices;
			}
			set
			{
				this._db_RoomServices.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_db_RoomServices(db_RoomService entity)
		{
			this.SendPropertyChanging();
			entity.db_Service = this;
		}
		
		private void detach_db_RoomServices(db_RoomService entity)
		{
			this.SendPropertyChanging();
			entity.db_Service = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.db_Staff")]
	public partial class db_Staff : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StaffID;
		
		private System.Nullable<int> _UserID;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Position;
		
		private decimal _Salary;
		
		private EntityRef<db_User> _db_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStaffIDChanging(int value);
    partial void OnStaffIDChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnPositionChanging(string value);
    partial void OnPositionChanged();
    partial void OnSalaryChanging(decimal value);
    partial void OnSalaryChanged();
    #endregion
		
		public db_Staff()
		{
			this._db_User = default(EntityRef<db_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int StaffID
		{
			get
			{
				return this._StaffID;
			}
			set
			{
				if ((this._StaffID != value))
				{
					this.OnStaffIDChanging(value);
					this.SendPropertyChanging();
					this._StaffID = value;
					this.SendPropertyChanged("StaffID");
					this.OnStaffIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._db_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Salary", DbType="Decimal(10,2) NOT NULL")]
		public decimal Salary
		{
			get
			{
				return this._Salary;
			}
			set
			{
				if ((this._Salary != value))
				{
					this.OnSalaryChanging(value);
					this.SendPropertyChanging();
					this._Salary = value;
					this.SendPropertyChanged("Salary");
					this.OnSalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="db_User_db_Staff", Storage="_db_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public db_User db_User
		{
			get
			{
				return this._db_User.Entity;
			}
			set
			{
				db_User previousValue = this._db_User.Entity;
				if (((previousValue != value) 
							|| (this._db_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._db_User.Entity = null;
						previousValue.db_Staffs.Remove(this);
					}
					this._db_User.Entity = value;
					if ((value != null))
					{
						value.db_Staffs.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("db_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.db_Tax")]
	public partial class db_Tax : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _tax;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntaxChanging(System.Nullable<int> value);
    partial void OntaxChanged();
    #endregion
		
		public db_Tax()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tax", DbType="Int")]
		public System.Nullable<int> tax
		{
			get
			{
				return this._tax;
			}
			set
			{
				if ((this._tax != value))
				{
					this.OntaxChanging(value);
					this.SendPropertyChanging();
					this._tax = value;
					this.SendPropertyChanged("tax");
					this.OntaxChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Discount")]
	public partial class Discount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private System.Nullable<System.DateTime> _end;
		
		private System.Nullable<System.DateTime> _start;
		
		private System.Nullable<int> _discount1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnendChanging(System.Nullable<System.DateTime> value);
    partial void OnendChanged();
    partial void OnstartChanging(System.Nullable<System.DateTime> value);
    partial void OnstartChanged();
    partial void Ondiscount1Changing(System.Nullable<int> value);
    partial void Ondiscount1Changed();
    #endregion
		
		public Discount()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[end]", Storage="_end", DbType="Date")]
		public System.Nullable<System.DateTime> end
		{
			get
			{
				return this._end;
			}
			set
			{
				if ((this._end != value))
				{
					this.OnendChanging(value);
					this.SendPropertyChanging();
					this._end = value;
					this.SendPropertyChanged("end");
					this.OnendChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_start", DbType="Date")]
		public System.Nullable<System.DateTime> start
		{
			get
			{
				return this._start;
			}
			set
			{
				if ((this._start != value))
				{
					this.OnstartChanging(value);
					this.SendPropertyChanging();
					this._start = value;
					this.SendPropertyChanged("start");
					this.OnstartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="discount", Storage="_discount1", DbType="Int")]
		public System.Nullable<int> discount1
		{
			get
			{
				return this._discount1;
			}
			set
			{
				if ((this._discount1 != value))
				{
					this.Ondiscount1Changing(value);
					this.SendPropertyChanging();
					this._discount1 = value;
					this.SendPropertyChanged("discount1");
					this.Ondiscount1Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ImageTypeRoom")]
	public partial class ImageTypeRoom : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _img;
		
		private System.Nullable<int> _idType;
		
		private EntityRef<db_RoomType> _db_RoomType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnimgChanging(string value);
    partial void OnimgChanged();
    partial void OnidTypeChanging(System.Nullable<int> value);
    partial void OnidTypeChanged();
    #endregion
		
		public ImageTypeRoom()
		{
			this._db_RoomType = default(EntityRef<db_RoomType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_img", DbType="VarChar(100)")]
		public string img
		{
			get
			{
				return this._img;
			}
			set
			{
				if ((this._img != value))
				{
					this.OnimgChanging(value);
					this.SendPropertyChanging();
					this._img = value;
					this.SendPropertyChanged("img");
					this.OnimgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idType", DbType="Int")]
		public System.Nullable<int> idType
		{
			get
			{
				return this._idType;
			}
			set
			{
				if ((this._idType != value))
				{
					if (this._db_RoomType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidTypeChanging(value);
					this.SendPropertyChanging();
					this._idType = value;
					this.SendPropertyChanged("idType");
					this.OnidTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="db_RoomType_ImageTypeRoom", Storage="_db_RoomType", ThisKey="idType", OtherKey="id", IsForeignKey=true)]
		public db_RoomType db_RoomType
		{
			get
			{
				return this._db_RoomType.Entity;
			}
			set
			{
				db_RoomType previousValue = this._db_RoomType.Entity;
				if (((previousValue != value) 
							|| (this._db_RoomType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._db_RoomType.Entity = null;
						previousValue.ImageTypeRooms.Remove(this);
					}
					this._db_RoomType.Entity = value;
					if ((value != null))
					{
						value.ImageTypeRooms.Add(this);
						this._idType = value.id;
					}
					else
					{
						this._idType = default(Nullable<int>);
					}
					this.SendPropertyChanged("db_RoomType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Slider")]
	public partial class Slider
	{
		
		private int _id;
		
		private string _image;
		
		private string _slogan;
		
		public Slider()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image", DbType="VarChar(50)")]
		public string image
		{
			get
			{
				return this._image;
			}
			set
			{
				if ((this._image != value))
				{
					this._image = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_slogan", DbType="NVarChar(100)")]
		public string slogan
		{
			get
			{
				return this._slogan;
			}
			set
			{
				if ((this._slogan != value))
				{
					this._slogan = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.db_Rooms")]
	public partial class db_Room : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RoomID;
		
		private System.Nullable<int> _RoomNumber;
		
		private System.Nullable<int> _Slot;
		
		private System.Nullable<int> _RoomStatus;
		
		private System.Nullable<int> _ActiveStatus;
		
		private System.Nullable<int> _idroomtype;
		
		private System.Nullable<int> _floorID;
		
		private EntitySet<BookingsOnline> _BookingsOnlines;
		
		private EntitySet<db_Booking> _db_Bookings;
		
		private EntityRef<db_Floor> _db_Floor;
		
		private EntityRef<db_RoomType> _db_RoomType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoomIDChanging(int value);
    partial void OnRoomIDChanged();
    partial void OnRoomNumberChanging(System.Nullable<int> value);
    partial void OnRoomNumberChanged();
    partial void OnSlotChanging(System.Nullable<int> value);
    partial void OnSlotChanged();
    partial void OnRoomStatusChanging(System.Nullable<int> value);
    partial void OnRoomStatusChanged();
    partial void OnActiveStatusChanging(System.Nullable<int> value);
    partial void OnActiveStatusChanged();
    partial void OnidroomtypeChanging(System.Nullable<int> value);
    partial void OnidroomtypeChanged();
    partial void OnfloorIDChanging(System.Nullable<int> value);
    partial void OnfloorIDChanged();
    #endregion
		
		public db_Room()
		{
			this._BookingsOnlines = new EntitySet<BookingsOnline>(new Action<BookingsOnline>(this.attach_BookingsOnlines), new Action<BookingsOnline>(this.detach_BookingsOnlines));
			this._db_Bookings = new EntitySet<db_Booking>(new Action<db_Booking>(this.attach_db_Bookings), new Action<db_Booking>(this.detach_db_Bookings));
			this._db_Floor = default(EntityRef<db_Floor>);
			this._db_RoomType = default(EntityRef<db_RoomType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RoomID
		{
			get
			{
				return this._RoomID;
			}
			set
			{
				if ((this._RoomID != value))
				{
					this.OnRoomIDChanging(value);
					this.SendPropertyChanging();
					this._RoomID = value;
					this.SendPropertyChanged("RoomID");
					this.OnRoomIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomNumber", DbType="Int")]
		public System.Nullable<int> RoomNumber
		{
			get
			{
				return this._RoomNumber;
			}
			set
			{
				if ((this._RoomNumber != value))
				{
					this.OnRoomNumberChanging(value);
					this.SendPropertyChanging();
					this._RoomNumber = value;
					this.SendPropertyChanged("RoomNumber");
					this.OnRoomNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Slot", DbType="Int")]
		public System.Nullable<int> Slot
		{
			get
			{
				return this._Slot;
			}
			set
			{
				if ((this._Slot != value))
				{
					this.OnSlotChanging(value);
					this.SendPropertyChanging();
					this._Slot = value;
					this.SendPropertyChanged("Slot");
					this.OnSlotChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomStatus", DbType="Int")]
		public System.Nullable<int> RoomStatus
		{
			get
			{
				return this._RoomStatus;
			}
			set
			{
				if ((this._RoomStatus != value))
				{
					this.OnRoomStatusChanging(value);
					this.SendPropertyChanging();
					this._RoomStatus = value;
					this.SendPropertyChanged("RoomStatus");
					this.OnRoomStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveStatus", DbType="Int")]
		public System.Nullable<int> ActiveStatus
		{
			get
			{
				return this._ActiveStatus;
			}
			set
			{
				if ((this._ActiveStatus != value))
				{
					this.OnActiveStatusChanging(value);
					this.SendPropertyChanging();
					this._ActiveStatus = value;
					this.SendPropertyChanged("ActiveStatus");
					this.OnActiveStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idroomtype", DbType="Int")]
		public System.Nullable<int> idroomtype
		{
			get
			{
				return this._idroomtype;
			}
			set
			{
				if ((this._idroomtype != value))
				{
					if (this._db_RoomType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidroomtypeChanging(value);
					this.SendPropertyChanging();
					this._idroomtype = value;
					this.SendPropertyChanged("idroomtype");
					this.OnidroomtypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_floorID", DbType="Int")]
		public System.Nullable<int> floorID
		{
			get
			{
				return this._floorID;
			}
			set
			{
				if ((this._floorID != value))
				{
					if (this._db_Floor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnfloorIDChanging(value);
					this.SendPropertyChanging();
					this._floorID = value;
					this.SendPropertyChanged("floorID");
					this.OnfloorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="db_Room_BookingsOnline", Storage="_BookingsOnlines", ThisKey="RoomID", OtherKey="RoomID")]
		public EntitySet<BookingsOnline> BookingsOnlines
		{
			get
			{
				return this._BookingsOnlines;
			}
			set
			{
				this._BookingsOnlines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="db_Room_db_Booking", Storage="_db_Bookings", ThisKey="RoomID", OtherKey="RoomID")]
		public EntitySet<db_Booking> db_Bookings
		{
			get
			{
				return this._db_Bookings;
			}
			set
			{
				this._db_Bookings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="db_Floor_db_Room", Storage="_db_Floor", ThisKey="floorID", OtherKey="id", IsForeignKey=true, DeleteRule="CASCADE")]
		public db_Floor db_Floor
		{
			get
			{
				return this._db_Floor.Entity;
			}
			set
			{
				db_Floor previousValue = this._db_Floor.Entity;
				if (((previousValue != value) 
							|| (this._db_Floor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._db_Floor.Entity = null;
						previousValue.db_Rooms.Remove(this);
					}
					this._db_Floor.Entity = value;
					if ((value != null))
					{
						value.db_Rooms.Add(this);
						this._floorID = value.id;
					}
					else
					{
						this._floorID = default(Nullable<int>);
					}
					this.SendPropertyChanged("db_Floor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="db_RoomType_db_Room", Storage="_db_RoomType", ThisKey="idroomtype", OtherKey="id", IsForeignKey=true, DeleteRule="CASCADE")]
		public db_RoomType db_RoomType
		{
			get
			{
				return this._db_RoomType.Entity;
			}
			set
			{
				db_RoomType previousValue = this._db_RoomType.Entity;
				if (((previousValue != value) 
							|| (this._db_RoomType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._db_RoomType.Entity = null;
						previousValue.db_Rooms.Remove(this);
					}
					this._db_RoomType.Entity = value;
					if ((value != null))
					{
						value.db_Rooms.Add(this);
						this._idroomtype = value.id;
					}
					else
					{
						this._idroomtype = default(Nullable<int>);
					}
					this.SendPropertyChanged("db_RoomType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BookingsOnlines(BookingsOnline entity)
		{
			this.SendPropertyChanging();
			entity.db_Room = this;
		}
		
		private void detach_BookingsOnlines(BookingsOnline entity)
		{
			this.SendPropertyChanging();
			entity.db_Room = null;
		}
		
		private void attach_db_Bookings(db_Booking entity)
		{
			this.SendPropertyChanging();
			entity.db_Room = this;
		}
		
		private void detach_db_Bookings(db_Booking entity)
		{
			this.SendPropertyChanging();
			entity.db_Room = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.db_Users")]
	public partial class db_User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserID;
		
		private string _Username;
		
		private string _Password;
		
		private System.Nullable<byte> _qlKS;
		
		private System.Nullable<byte> _qlWeb;
		
		private System.Nullable<byte> _qlThongKe;
		
		private System.Nullable<byte> _qlSetting;
		
		private EntitySet<db_Staff> _db_Staffs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnqlKSChanging(System.Nullable<byte> value);
    partial void OnqlKSChanged();
    partial void OnqlWebChanging(System.Nullable<byte> value);
    partial void OnqlWebChanged();
    partial void OnqlThongKeChanging(System.Nullable<byte> value);
    partial void OnqlThongKeChanged();
    partial void OnqlSettingChanging(System.Nullable<byte> value);
    partial void OnqlSettingChanged();
    #endregion
		
		public db_User()
		{
			this._db_Staffs = new EntitySet<db_Staff>(new Action<db_Staff>(this.attach_db_Staffs), new Action<db_Staff>(this.detach_db_Staffs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_qlKS", DbType="TinyInt")]
		public System.Nullable<byte> qlKS
		{
			get
			{
				return this._qlKS;
			}
			set
			{
				if ((this._qlKS != value))
				{
					this.OnqlKSChanging(value);
					this.SendPropertyChanging();
					this._qlKS = value;
					this.SendPropertyChanged("qlKS");
					this.OnqlKSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_qlWeb", DbType="TinyInt")]
		public System.Nullable<byte> qlWeb
		{
			get
			{
				return this._qlWeb;
			}
			set
			{
				if ((this._qlWeb != value))
				{
					this.OnqlWebChanging(value);
					this.SendPropertyChanging();
					this._qlWeb = value;
					this.SendPropertyChanged("qlWeb");
					this.OnqlWebChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_qlThongKe", DbType="TinyInt")]
		public System.Nullable<byte> qlThongKe
		{
			get
			{
				return this._qlThongKe;
			}
			set
			{
				if ((this._qlThongKe != value))
				{
					this.OnqlThongKeChanging(value);
					this.SendPropertyChanging();
					this._qlThongKe = value;
					this.SendPropertyChanged("qlThongKe");
					this.OnqlThongKeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_qlSetting", DbType="TinyInt")]
		public System.Nullable<byte> qlSetting
		{
			get
			{
				return this._qlSetting;
			}
			set
			{
				if ((this._qlSetting != value))
				{
					this.OnqlSettingChanging(value);
					this.SendPropertyChanging();
					this._qlSetting = value;
					this.SendPropertyChanged("qlSetting");
					this.OnqlSettingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="db_User_db_Staff", Storage="_db_Staffs", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<db_Staff> db_Staffs
		{
			get
			{
				return this._db_Staffs;
			}
			set
			{
				this._db_Staffs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_db_Staffs(db_Staff entity)
		{
			this.SendPropertyChanging();
			entity.db_User = this;
		}
		
		private void detach_db_Staffs(db_Staff entity)
		{
			this.SendPropertyChanging();
			entity.db_User = null;
		}
	}
}
#pragma warning restore 1591
